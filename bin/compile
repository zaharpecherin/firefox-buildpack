#!/bin/sh

set -e

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

# Config Globals
LANG=en-US
PLATFORM=linux64

if [ -f $ENV_DIR/FIREFOX_VERSION ]; then
  VERSION=$(cat $ENV_DIR/FIREFOX_VERSION)
  echo "-----> Firefox version defined as: v${VERSION}"
else
  VERSION=latest
fi

# Buildpack URL
ARCHIVE_NAME=firefox
FILE_NAME=${ARCHIVE_NAME}-${VERSION}.tar.bz2
BUILDPACK_FIREFOX_PACKAGE="https://download.mozilla.org/?product=firefox-${VERSION}-SSL&os=${PLATFORM}&lang=${LANG}"

mkdir -p $CACHE_DIR
if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
  echo "-----> Fetching Firefox package from ${BUILDPACK_FIREFOX_PACKAGE}"
  curl -s $BUILDPACK_FIREFOX_PACKAGE -L -o $CACHE_DIR/$FILE_NAME
fi

echo "-----> Extracting Firefox binaries to ${BUILD_DIR}/vendor/${ARCHIVE_NAME}"
mkdir -p $CACHE_DIR/$ARCHIVE_NAME
mkdir -p $BUILD_DIR/vendor
tar jxf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR
mv $CACHE_DIR/$ARCHIVE_NAME $BUILD_DIR/vendor/

echo "-----> Locating libasound:"
find / -name "libasound*" 2>/dev/null

LIBRARY_PATH=$(find / -name "*libasound*" | xargs dirname | tr '\n' ':')

if [ -z "$LIBRARY_PATH" ]; then
  echo "No libasound paths found. Exiting script."
  exit 1
else
  echo "Library paths found: $LIBRARY_PATH"
fi

mkdir -p .profile.d
cat << EOF > .profile.d/configure_libs.sh
export LD_LIBRARY_PATH="${LIBRARY_PATH}:\$LD_LIBRARY_PATH"
EOF

chmod +x .profile.d/configure_libs.sh

echo "-----> Library search paths:"
echo $LD_LIBRARY_PATH
